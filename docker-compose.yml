version: '3.8'

services:
  db:
    build: ./db
    container_name: kanban-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-kanban_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - kanban-network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kanban-api
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-kanban_db}
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - kanban-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: kanban-frontend
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      NEXT_PUBLIC_API_URL: http://api:3001/api
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - kanban-network

networks:
  kanban-network:
    driver: bridge

volumes:
  postgres_data: 
